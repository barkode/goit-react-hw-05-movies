{"version":3,"file":"static/js/736.162ba5f2.chunk.js","mappings":"qRAEaA,EAAaC,EAAAA,EAAAA,GAAH,6HAOVC,EAAOD,EAAAA,EAAAA,GAAH,ke,SC4CjB,EA/Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERG,EAFQ,OAGdC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACN,KAGF,+BAEI,SAACH,EAAD,UACGM,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,cAAhC,OACR,UAACf,EAAD,YACE,gBACEgB,IAAG,UACDH,EACII,EAAAA,GAAkBJ,EAClBK,EAAAA,GAAc,SAAWH,GAE/BI,IAAKJ,EACLK,QAAQ,UAGV,0BACE,sCADF,IACwBL,MAExB,0BACE,yCADF,IAC2BD,OAflBF,EADH,OAwBnB,C,wMChDDS,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,sCAAyCE,EAAAA,KADjC,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGE,EAAAA,GADH,kBACoBI,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAM3B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,oBACOsB,EAAAA,GADP,oBADG,uBAClBC,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZhB,EAAY,mCAAG,WAAMP,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,4BACesB,EAAAA,GADf,oBADG,uBAClBC,EADkB,EAClBA,KADkB,kBAKnBA,EAAKpB,MALc,2CAAH,sDAQZyB,EAAe,mCAAG,WAAM5B,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,4BACesB,EAAAA,GADf,oBADM,uBACrBC,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,uGCnCrB,IAAMF,EAAU,mCAEVN,EAAkB,mCAClBC,EAAc,qC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","util/api.js","util/options.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 24px;\n`;\nexport const Card = styled.li`\n  background: rgb(236, 236, 236);\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n\n  min-width: 182px;\n  font-size: 14px;\n  padding: 4px;\n  max-width: min-content;\n  border-radius: 10px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n    border-radius: 8px;\n  }\n  span {\n    color: black;\n  }\n  p {\n    color: grey;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from '../../util/api';\nimport { BASE_POSTER_URL, PLACEHOLDER } from '../../util/options';\nimport { Card, StyledList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <StyledList>\n          {cast.map(({ id, profile_path, character, original_name }) => (\n            <Card key={id}>\n              <img\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n                loading=\"lazy\"\n              />\n\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </Card>\n          ))}\n        </StyledList>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { API_KEY } from './options';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","export const API_KEY = '0a970bc4ac49d8d10afeb655bc771ecd';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n"],"names":["StyledList","styled","Card","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCastMovie","console","log","map","id","profile_path","character","original_name","src","BASE_POSTER_URL","PLACEHOLDER","alt","loading","axios","getTrendingMovies","API_KEY","data","results","getMovieByQuery","query","getMovieById","getReviewsMovie"],"sourceRoot":""}